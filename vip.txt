function whod() {
join <(join <(who | egrep -o "^[a-zA-Z0-9 ]+ pts/[0-9]+[ ]+[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}" | sort) <(who | egrep -o '^[a-zA-Z0-9]+ ' | sort | xargs -I{} sh -c "cat /etc/passwd | cut -d':' -f1,5 | cut -d',' -f1 | egrep {}" | tr ":" " " | sort) | uniq | sort -k 1| awk '{printf "%s %s %s %s %s %s\n", $2, $1, $3, $4, $5, $6}') <(who | tr -s ' ' | cut -d" " -f1 | xargs -I {} w {} | egrep "^[a-z0-9]+" | tr -s " " | sort | uniq | cut -d" " -f 2,5 | awk '!seen[$1]++') 2> /dev/null | cut -d" " -f1,2,4,5,6,7  | awk '{if($6 ~ /s/){printf"%s %s %s %s %s <1m\n",$2, $4, $5, $1, $3} else if($6 ~/m/) { if($6 ~ /^.:/) {printf"%s %s %s %s %s >%sh\n",$2, $4, $5, $1, $3, substr($6,1,1)} else {printf"%s %s %s %s %s >%sh\n",$2, $4, $5, $1, $3, substr($6, 1,2)} }else{ if($6 ~/^.:/) {printf"%s %s %s %s %s ~%sm\n",$2, $4, $5, $1, $3, substr($6, 1, 1)} else { printf"%s %s %s %s %s ~%sm\n",$2, $4, $5, $1, $3, substr($6, 1, 2) } }}'| column -t 2>/dev/null
}

function leaderboard() {
join <(join <(last | awk '{print $1,$10}' | sed 's/(//g' | sed 's/)//g'  | sed 's/:/ /g' | awk '{arr[$1] += (($2*60) + $3)} END { for(i in arr) {printf "%s %s %s %s\n", i, int(arr[i]/1440),(int(arr[i]/60)%24), arr[i]%60} }' | sort ) <(cat /etc/passwd | cut -d":" -f1,5 | cut -d"," -f1 | tr ":" " " | sort)) <(cat /etc/passwd | cut -d":" -f1 | xargs -I {} last {} | tr -s ' ' |awk '{if($0 ~ /[a-zA-Z0-9]+ pts\/[0-9]+/ && seen[$1] == 0) {seen[$1] = $0}  if($9 ~ /logged/) {seen[$1] = $0 }} END{for(i in seen) {printf "%s\n",seen[i]}}' | awk '{printf "%s %s %s %s %s\n", $1, $9, $5, $6, $10}' | tr '():' ' ' | tr -s ' ' | awk '{if (!($6 ~ /in/) && $2 - $6 < 0) {printf "%s %s:%s %s %s\n", $1, $2, $3, $4, $5 + 1} else {printf "%s %s:%s %s %s\n", $1, $2, $3, $4,$5} }'| sort) | sort -k2,2nr -k3,3nr -k4,4nr| awk '{if($7 ~ /logged/) {printf "№%s %s %s %s | %sd %sh%sm | online\n" ,NR ,$1,$5,$6,$2,$3,$4} else {printf "№%s %s %s %s | %sd %sh%sm | %s%s %s\n" ,NR ,$1,$5,$6,$2,$3,$4,$8,$9,$7}}' | column -t
}

//stable
//join <(join <(last | awk '{print $1,$10}' | sed 's/(//g' | sed 's/)//g'  | sed 's/:/ /g' | awk '{arr[$1] += (($2*60) + $3)} END { for(i in arr) {printf "%s %s %s %s\n", i, int(arr[i]/1440),(int(arr[i]/60)%24), arr[i]%60} }' | sort ) <(cat /etc/passwd | cut -d":" -f1,5 | cut -d"," -f1 | tr ":" " " | sort)) <(cat /etc/passwd | cut -d":" -f1 | xargs -I {} last {} | tr -s ' ' |awk '{if($0 ~ /[a-zA-Z0-9]+ pts\/[0-9]+/ && seen[$1] == 0) {seen[$1] = $0}  if($9 ~ /logged/) {seen[$1] = $0 }} END{for(i in seen) {printf "%s\n",seen[i]}}' | awk '{printf "%s %s %s %s\n", $1, $9, $5, $6}' | sort) | sort -k2,2nr -k3,3nr -k4,4nr| awk '{if($7 ~ /logged/) {printf "№%s %s %s %s | %sd %sh%sm | online\n" ,NR ,$1,$5,$6,$2,$3,$4} else {printf "№%s %s %s %s | %sd %sh%sm | %s%s %s\n" ,NR ,$1,$5,$6,$2,$3,$4,$8,$9,$7}}' | column -t
