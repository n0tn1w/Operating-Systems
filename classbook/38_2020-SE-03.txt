#!/bin/bash

RED='\033[0;31m'
ORANGE='\033[38;5;208m'
GREEN='\033[0;32m'
NC='\033[0m'

if [[ ! $# -eq 2 ]]; then
    echo -e "${RED}Invalid number of params${NC}"
    exit 1;
fi

zipFolder=$( echo "$1" | sed -E 's:/$::g')
fromFolder=$( echo "$2" | sed -E 's:/$::g')

#Check dest structure($zipFolder - zip)
if [[ -d $zipFolder ]]; then
    if [[ ! -f "$zipFolder/db" ]]; then
        echo -e "${RED}$zipFolder/db doesnt exits${NC}"
        exit 1;
    fi  

    if [[ ! -d "$zipFolder/packages" ]]; then
        echo -e "${RED}$zipFolder/packages doesnt exits${NC}"
        exit 1;
    fi  
    
    filesCnt=$( find $zipFolder -maxdepth 1 -type f,d | wc -l)
    if [[ ! $filesCnt -eq 3 ]]; then
        echo -e "${RED}Incorrect format of dest dir $zipFolder${NC}"
        exit 1;
    fi  

else
    echo -e "${RED}$zipFolder is not a dir${NC}"
    exit 1;
fi

#Check source structure($fromFolder - normal)
if [[ -d $fromFolder ]]; then
    if [[ ! -f "$fromFolder/version" ]]; then
        echo -e "${RED}$fromFolder/version doesnt exits${NC}"
        exit 1;
    else
        #Check version
        cat "$fromFolder/version" | egrep -q "^[0-9]+\.[0-9]+\.[0-9]+\-[0-9]+$"
        if [[ ! $? -eq 0 ]]; then
            echo -e "${RED}Incorrect version format in $fromFolder${NC}"
            exit 1;
        fi
    fi  

    if [[ ! -d "$fromFolder/tree" ]]; then
        echo -e "${RED}$fromFolder/tree doesnt exits${NC}"
        exit 1;
    fi  

    filesCnt=$( find $fromFolder -maxdepth 1 -type f,d | wc -l)
    if [[ ! $filesCnt -eq 3 ]]; then
        echo -e "${RED}Incorrect format of dir $fromFolder${NC}"
        exit 1;
    fi  

else
    echo -e "${RED}$fromFolder is not a dir${NC}"
    exit 1;
fi

#Archire $fromFolder/tree and get names 
versionName=$(cat $fromFolder/version)
entryName=$fromFolder-$versionName 
tar -cJf $entryName.tar.xz -C $fromFolder/tree .

sha=$(sha256sum $entryName.tar.xz | cut -d" " -f1) 
zipPath="$zipFolder/packages/$sha.tar.xz"
db="$zipFolder/db"

#Check if version is present
check=$( cat $zipFolder/db | egrep "^$entryName" )
if [[ -z $check ]]; then
    if [[ -f $zipPath ]]; then
        #Get the line to change the version

        rm "$entryName.tar.xz"
    
        getLine=$( cat $zipFolder/db | egrep "$sha" )
        sed -i "s/$getLine/$entryName $sha/g" $db 
        sort -o $db $db 
    
        echo -e "${GREEN}Found package with same data. Version change to $entryName${NC}"
    else
        #Add new entry
    
        echo "$entryName $sha" >> $db 
        sort -o $db $db 
        mv $entryName.tar.xz $zipPath

        echo -e "${GREEN}Succefully added $entryName${NC}"
    fi  
else
    if [[ -f $zipPath ]]; then
        #File with same version and date already exist

        rm $entryName.tar.xz

        echo -e "${ORANGE}This entry already exist${NC}" 
    else
        #Same version but with different data

        oldSha=$( cat $zipFolder/db | egrep "$entryName" | egrep -o "\s[^\s]+$" | sed -E 's:^\s+::g')
        rm $zipFolder/packages/$oldSha.tar.xz

        sed -i "s/^$entryName.*$/$entryName $sha/g" $db 
        sort -o $db $db 
        mv $entryName.tar.xz $zipPath

        echo -e "${GREEN}Updated package for $entryName${NC}"
    fi  
fi
~        
